{"ast":null,"code":"var _jsxFileName = \"/Users/maqiang/Desktop/INFO 6250/student--qma16443/project/Project/src/components/AddTransaction.jsx\";\nimport React, { useState, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { addTransaction } from '../services/services';\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport { incomeCategories, expenseCategories } from '../constants/categories.js';\nimport useStyles from './styles';\nexport const AddTransaction = () => {\n  //const [text, setText] = useState('');\n  const classes = useStyles();\n  const [category, setCategory] = useState('');\n  const [amount, setAmount] = useState(0);\n  const [type, setType] = useState('');\n  const [date, setDate] = useState(new Date()); // const [formData, setFormData] = useState(initialState);\n\n  const {\n    updateTransactions\n  } = useContext(GlobalContext);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const newTransaction = {\n      category,\n      amount: +amount,\n      type,\n      date\n    };\n    addTransaction(newTransaction).then(result => {\n      console.log(result);\n      updateTransactions(result); // setText(\"\")\n\n      setCategory(\"\");\n      setAmount(0);\n      setDate(new Date());\n      setType('');\n    }).catch(err => {\n      console.log(err);\n    });\n    ;\n  };\n\n  const selectedCategories = type === 'Income' ? incomeCategories : expenseCategories;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Add new transaction\"), /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"I/E\"), /*#__PURE__*/React.createElement(Select, {\n    value: type,\n    onChange: e => setType(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Income\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Income\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Expense\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Expense\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(Select, {\n    value: category,\n    onChange: e => setCategory(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, selectedCategories.map(c => /*#__PURE__*/React.createElement(MenuItem, {\n    key: c.type,\n    value: c.type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 44\n    }\n  }, c.type))))), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"Amount \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 38\n    }\n  }), \"(negative - expense, positive - income)\"), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    type: \"number\",\n    type: \"number\",\n    value: amount,\n    onChange: e => setAmount(e.target.value),\n    placeholder: \"Enter amount...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Date\",\n    type: \"date\",\n    value: date,\n    onChange: e => setDate(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"Add transaction\")));\n};","map":{"version":3,"sources":["/Users/maqiang/Desktop/INFO 6250/student--qma16443/project/Project/src/components/AddTransaction.jsx"],"names":["React","useState","useContext","GlobalContext","addTransaction","TextField","Typography","Grid","Button","FormControl","InputLabel","Select","MenuItem","incomeCategories","expenseCategories","useStyles","AddTransaction","classes","category","setCategory","amount","setAmount","type","setType","date","setDate","Date","updateTransactions","onSubmit","e","preventDefault","newTransaction","then","result","console","log","catch","err","selectedCategories","target","value","map","c"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,IAAhC,EAAsCC,MAAtC,EAA8CC,WAA9C,EAA2DC,UAA3D,EAAuEC,MAAvE,EAA+EC,QAA/E,QAA+F,mBAA/F;AACA,SAASC,gBAAT,EAA2BC,iBAA3B,QAAoD,4BAApD;AACA,OAAOC,SAAP,MAAsB,UAAtB;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAClC;AACA,QAAMC,OAAO,GAAGF,SAAS,EAAzB;AACA,QAAM,CAACG,QAAD,EAAUC,WAAV,IAAuBlB,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACmB,MAAD,EAASC,SAAT,IAAsBpB,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACqB,IAAD,EAAMC,OAAN,IAAiBtB,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACuB,IAAD,EAAMC,OAAN,IAAiBxB,QAAQ,CAAC,IAAIyB,IAAJ,EAAD,CAA/B,CANkC,CAOnC;;AACC,QAAM;AAAEC,IAAAA;AAAF,MAAyBzB,UAAU,CAACC,aAAD,CAAzC;;AAEA,QAAMyB,QAAQ,GAAGC,CAAC,IAAI;AACpBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,cAAc,GAAG;AACrBb,MAAAA,QADqB;AAErBE,MAAAA,MAAM,EAAE,CAACA,MAFY;AAGrBE,MAAAA,IAHqB;AAIrBE,MAAAA;AAJqB,KAAvB;AAMApB,IAAAA,cAAc,CAAC2B,cAAD,CAAd,CACCC,IADD,CACOC,MAAD,IAAY;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAN,MAAAA,kBAAkB,CAACM,MAAD,CAAlB,CAFgB,CAGhB;;AACAd,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,MAAAA,SAAS,CAAC,CAAD,CAAT;AACAI,MAAAA,OAAO,CAAC,IAAIC,IAAJ,EAAD,CAAP;AACAH,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD,KATD,EASGa,KATH,CASUC,GAAD,IAAS;AAChBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,KAXD;AAYA;AACD,GArBD;;AAuBA,QAAMC,kBAAkB,GAAGhB,IAAI,KAAK,QAAT,GAAoBT,gBAApB,GAAuCC,iBAAlE;AAEA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,WAAD;AAAa,IAAA,SAAS,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADA,eAEA,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEQ,IAAf;AAAqB,IAAA,QAAQ,EAAGO,CAAD,IAAON,OAAO,CAACM,CAAC,CAACU,MAAF,CAASC,KAAV,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,CAFA,CADA,CAPF,eAgBA,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,SAAS,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEtB,QAAf;AAAyB,IAAA,QAAQ,EAAGW,CAAD,IAAOV,WAAW,CAACU,CAAC,CAACU,MAAF,CAASC,KAAV,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,kBAAkB,CAACG,GAAnB,CAAwBC,CAAD,iBAAO,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,CAAC,CAACpB,IAAjB;AAAuB,IAAA,KAAK,EAAEoB,CAAC,CAACpB,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCoB,CAAC,CAACpB,IAAzC,CAA9B,CADH,CAFF,CADF,CAhBA,eAwBA;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAA+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA/B,4CAxBA,eA0BA,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,SAAD;AAAW,IAAA,SAAS,MAApB;AAAqB,IAAA,IAAI,EAAC,QAA1B;AAAmC,IAAA,IAAI,EAAC,QAAxC;AAAiD,IAAA,KAAK,EAAEF,MAAxD;AAAgE,IAAA,QAAQ,EAAGS,CAAD,IAAOR,SAAS,CAACQ,CAAC,CAACU,MAAF,CAASC,KAAV,CAA1F;AAA4G,IAAA,WAAW,EAAC,iBAAxH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CA1BA,eA8BD,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,SAAD;AAAW,IAAA,SAAS,MAApB;AAAqB,IAAA,KAAK,EAAC,MAA3B;AAAkC,IAAA,IAAI,EAAC,MAAvC;AAA8C,IAAA,KAAK,EAAEhB,IAArD;AAA2D,IAAA,QAAQ,EAAGK,CAAD,IAAOJ,OAAO,CAACI,CAAC,CAACU,MAAF,CAASC,KAAV,CAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CA9BC,eAiCE;AAAQ,IAAA,SAAS,EAAC,KAAlB;AAAyB,IAAA,OAAO,EAAEZ,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAjCF,CAFF,CADF;AAwCD,CA3EM","sourcesContent":["import React, {useState, useContext} from 'react'\nimport { GlobalContext } from '../context/GlobalState';\nimport { addTransaction } from '../services/services';\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport { incomeCategories, expenseCategories } from '../constants/categories.js';\nimport useStyles from './styles';\n\nexport const AddTransaction = () => {\n  //const [text, setText] = useState('');\n  const classes = useStyles();\n  const [category,setCategory]=useState('');\n  const [amount, setAmount] = useState(0);\n  const [type,setType] = useState('');\n  const [date,setDate] = useState(new Date());\n // const [formData, setFormData] = useState(initialState);\n  const { updateTransactions } = useContext(GlobalContext);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const newTransaction = {\n      category,\n      amount: +amount,\n      type,\n      date\n    }\n    addTransaction(newTransaction)\n    .then((result) => {\n      console.log(result)\n      updateTransactions(result)  \n      // setText(\"\")\n      setCategory(\"\");\n      setAmount(0);\n      setDate(new Date());\n      setType('');\n    }).catch((err) => {\n      console.log(err)     \n    });\n    ;\n  }\n\n  const selectedCategories = type === 'Income' ? incomeCategories : expenseCategories;\n\n  return (\n    <>\n      <h3>Add new transaction</h3>\n      <Grid>\n        \n      {/* <Grid item xs={6}>\n          <label htmlFor=\"text\">Text</label>\n          <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter text...\" />\n       </Grid> */}\n        \n        <Grid item xs={6}>\n        <FormControl fullWidth>\n        <InputLabel>I/E</InputLabel>\n        <Select value={type} onChange={(e) => setType(e.target.value)}>\n            <MenuItem value=\"Income\">Income</MenuItem>\n            <MenuItem value=\"Expense\">Expense</MenuItem>\n        </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={6}>\n        <FormControl fullWidth>\n          <InputLabel>Category</InputLabel>\n          <Select value={category} onChange={(e) => setCategory(e.target.value)}>\n            {selectedCategories.map((c) => <MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)}\n          </Select>\n        </FormControl>\n      </Grid>\n      <label htmlFor=\"amount\">Amount <br />\n            (negative - expense, positive - income)</label >\n      <Grid item xs={6}>\n          \n          <TextField fullWidth type=\"number\" type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)} placeholder=\"Enter amount...\" />\n     </Grid>\n     <Grid item xs={6}>\n        <TextField fullWidth label=\"Date\" type=\"date\" value={date} onChange={(e) => setDate(e.target.value )} />\n      </Grid>\n        <button className=\"btn\"  onClick={onSubmit} >Add transaction</button>\n    </Grid>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}