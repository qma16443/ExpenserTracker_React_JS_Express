{"ast":null,"code":"var convertNetworkError=function convertNetworkError(err){console.log(\"fail\");return{code:\"NETWORK-ERROR\",err:err};};var convertServiceError=function convertServiceError(err){return Promise.reject(err);};export var fetchLoginStatus=function fetchLoginStatus(username){return fetch(\"/session\",{method:\"GET\"}).catch(convertNetworkError).then(function(response){if(!response.ok){return response.json().then(convertServiceError);}return response.json();});};export var fetchLogin=function fetchLogin(username){return fetch(\"/session\",{method:\"POST\",headers:new Headers({\"content-type\":\"application/json\"}),body:JSON.stringify({username:username})}).catch(convertNetworkError).then(function(response){if(!response.ok){return response.json().then(convertServiceError);}return response.json();});};export var fetchLogout=function fetchLogout(){return fetch(\"/session\",{method:\"DELETE\"}).catch(convertNetworkError).then(function(response){return response.ok;});};export var fetchTransactionList=function fetchTransactionList(){return fetch(\"/transactions\",{method:\"GET\"}).catch(convertNetworkError).then(function(response){//when happens error\nif(!response.ok){return response.json().then(convertServiceError);}return response.json();});};export var removeTransaction=function removeTransaction(id){return fetch(\"/transaction\",{method:\"DELETE\",headers:new Headers({\"content-type\":\"application/json\"}),body:JSON.stringify({id:id})}).catch(convertNetworkError).then(function(response){if(!response.ok){return response.json().then(convertServiceError);}return response.json();});};export var clearTransactions=function clearTransactions(){return fetch(\"/cleartransactions\").then(function(response){if(!response.ok){return response.json().then(convertServiceError);}return response.json();});};export var addTransaction=function addTransaction(transaction){return fetch(\"/transaction\",{method:\"POST\",headers:new Headers({\"content-type\":\"application/json\"}),body:JSON.stringify({transaction:transaction})}).catch(convertNetworkError).then(function(response){return response.json();});};","map":{"version":3,"sources":["/Users/maqiang/Desktop/INFO 6250/student--qma16443/project/Project/src/services/services.js"],"names":["convertNetworkError","err","console","log","code","convertServiceError","Promise","reject","fetchLoginStatus","username","fetch","method","catch","then","response","ok","json","fetchLogin","headers","Headers","body","JSON","stringify","fetchLogout","fetchTransactionList","removeTransaction","id","clearTransactions","addTransaction","transaction"],"mappings":"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","sourcesContent":["const convertNetworkError = err => {\n  console.log(\"fail\");\n  return {\n    code: \"NETWORK-ERROR\",\n    err\n  };\n};\n\nconst convertServiceError = err => Promise.reject(err);\nexport const fetchLoginStatus = username => {\n  return fetch(\"/session\", {\n    method: \"GET\"\n  })\n    .catch(convertNetworkError)\n    .then(response => {\n      if (!response.ok) {\n        return response.json().then(convertServiceError);\n      }\n      return response.json();\n    });\n};\n\nexport const fetchLogin = username => {\n  return fetch(\"/session\", {\n    method: \"POST\",\n    headers: new Headers({\n      \"content-type\": \"application/json\"\n    }),\n    body: JSON.stringify({ username })\n  })\n    .catch(convertNetworkError)\n    .then(response => {\n      if (!response.ok) {\n        return response.json().then(convertServiceError);\n      }\n      return response.json();\n    });\n};\n\nexport const fetchLogout = () => {\n  return fetch(\"/session\", {\n    method: \"DELETE\"\n  })\n    .catch(convertNetworkError)\n    .then(response => {\n      return response.ok;\n    });\n};\n\nexport const fetchTransactionList = () => {\n  return fetch(\"/transactions\", {\n    method: \"GET\"\n  })\n    .catch(convertNetworkError)\n    .then(response => {\n      //when happens error\n      if (!response.ok) {\n        return response.json().then(convertServiceError);\n      }\n      return response.json();\n    });\n};\n\nexport const removeTransaction = id => {\n  return fetch(\"/transaction\", {\n    method: \"DELETE\",\n    headers: new Headers({\n      \"content-type\": \"application/json\"\n    }),\n    body: JSON.stringify({ id })\n  })\n    .catch(convertNetworkError)\n    .then(response => {\n      if (!response.ok) {\n        return response.json().then(convertServiceError);\n      }\n      return response.json();\n    });\n};\n\nexport const clearTransactions = () => {\n  return fetch(\"/cleartransactions\").then(response => {\n    if (!response.ok) {\n      return response.json().then(convertServiceError);\n    }\n    return response.json();\n  });\n};\n\nexport const addTransaction = transaction => {\n  return fetch(\"/transaction\", {\n    method: \"POST\",\n    headers: new Headers({\n      \"content-type\": \"application/json\"\n    }),\n    body: JSON.stringify({ transaction })\n  })\n    .catch(convertNetworkError)\n    .then(response => response.json());\n};\n"]},"metadata":{},"sourceType":"module"}