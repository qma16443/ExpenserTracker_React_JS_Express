{"ast":null,"code":"import { useContext } from 'react'; // import { ExpenseTrackerContext } from './context/context';\n\nimport { GlobalContext } from './context/GlobalState';\nimport { incomeCategories, expenseCategories, resetCategories } from './constants/categories';\n\nconst useTransactions = title => {\n  resetCategories();\n  const {\n    transactions\n  } = useContext(GlobalContext);\n  const rightTransactions = transactions.filter(t => t.type === title);\n  const total = rightTransactions.reduce((acc, currVal) => acc += currVal.amount, 0);\n  const categories = title === 'Income' ? incomeCategories : expenseCategories;\n  rightTransactions.forEach(t => {\n    const category = categories.find(c => c.type === t.category);\n    if (category) category.amount += t.amount;\n  });\n  const filteredCategories = categories.filter(sc => sc.amount > 0);\n  const chartData = {\n    datasets: [{\n      data: filteredCategories.map(c => c.amount),\n      backgroundColor: filteredCategories.map(c => c.color)\n    }],\n    labels: filteredCategories.map(c => c.type)\n  };\n  return {\n    filteredCategories,\n    total,\n    chartData\n  };\n};\n\nexport default useTransactions;","map":{"version":3,"sources":["/Users/maqiang/Desktop/INFO 6250/student--qma16443/project/Project/src/useTransactions.js"],"names":["useContext","GlobalContext","incomeCategories","expenseCategories","resetCategories","useTransactions","title","transactions","rightTransactions","filter","t","type","total","reduce","acc","currVal","amount","categories","forEach","category","find","c","filteredCategories","sc","chartData","datasets","data","map","backgroundColor","color","labels"],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B,C,CACA;;AACA,SAASC,aAAT,QAA8B,uBAA9B;AAEA,SAASC,gBAAT,EAA2BC,iBAA3B,EAA8CC,eAA9C,QAAqE,wBAArE;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjCF,EAAAA,eAAe;AACf,QAAM;AAAEG,IAAAA;AAAF,MAAmBP,UAAU,CAACC,aAAD,CAAnC;AACA,QAAMO,iBAAiB,GAAGD,YAAY,CAACE,MAAb,CAAqBC,CAAD,IAAOA,CAAC,CAACC,IAAF,KAAWL,KAAtC,CAA1B;AACA,QAAMM,KAAK,GAAGJ,iBAAiB,CAACK,MAAlB,CAAyB,CAACC,GAAD,EAAMC,OAAN,KAAkBD,GAAG,IAAIC,OAAO,CAACC,MAA1D,EAAkE,CAAlE,CAAd;AACA,QAAMC,UAAU,GAAGX,KAAK,KAAK,QAAV,GAAqBJ,gBAArB,GAAwCC,iBAA3D;AAEAK,EAAAA,iBAAiB,CAACU,OAAlB,CAA2BR,CAAD,IAAO;AAC/B,UAAMS,QAAQ,GAAGF,UAAU,CAACG,IAAX,CAAiBC,CAAD,IAAOA,CAAC,CAACV,IAAF,KAAWD,CAAC,CAACS,QAApC,CAAjB;AAEA,QAAIA,QAAJ,EAAcA,QAAQ,CAACH,MAAT,IAAmBN,CAAC,CAACM,MAArB;AACf,GAJD;AAMA,QAAMM,kBAAkB,GAAGL,UAAU,CAACR,MAAX,CAAmBc,EAAD,IAAQA,EAAE,CAACP,MAAH,GAAY,CAAtC,CAA3B;AAEA,QAAMQ,SAAS,GAAG;AAChBC,IAAAA,QAAQ,EAAE,CAAC;AACTC,MAAAA,IAAI,EAAEJ,kBAAkB,CAACK,GAAnB,CAAwBN,CAAD,IAAOA,CAAC,CAACL,MAAhC,CADG;AAETY,MAAAA,eAAe,EAAEN,kBAAkB,CAACK,GAAnB,CAAwBN,CAAD,IAAOA,CAAC,CAACQ,KAAhC;AAFR,KAAD,CADM;AAKhBC,IAAAA,MAAM,EAAER,kBAAkB,CAACK,GAAnB,CAAwBN,CAAD,IAAOA,CAAC,CAACV,IAAhC;AALQ,GAAlB;AAQA,SAAO;AAAEW,IAAAA,kBAAF;AAAsBV,IAAAA,KAAtB;AAA6BY,IAAAA;AAA7B,GAAP;AACD,CAxBD;;AA0BA,eAAenB,eAAf","sourcesContent":["import { useContext } from 'react';\n// import { ExpenseTrackerContext } from './context/context';\nimport { GlobalContext } from './context/GlobalState';\n\nimport { incomeCategories, expenseCategories, resetCategories } from './constants/categories';\n\nconst useTransactions = (title) => {\n  resetCategories();\n  const { transactions } = useContext(GlobalContext);\n  const rightTransactions = transactions.filter((t) => t.type === title);\n  const total = rightTransactions.reduce((acc, currVal) => acc += currVal.amount, 0);\n  const categories = title === 'Income' ? incomeCategories : expenseCategories;\n\n  rightTransactions.forEach((t) => {\n    const category = categories.find((c) => c.type === t.category);\n\n    if (category) category.amount += t.amount;\n  });\n\n  const filteredCategories = categories.filter((sc) => sc.amount > 0);\n\n  const chartData = {\n    datasets: [{\n      data: filteredCategories.map((c) => c.amount),\n      backgroundColor: filteredCategories.map((c) => c.color),\n    }],\n    labels: filteredCategories.map((c) => c.type),\n  };\n\n  return { filteredCategories, total, chartData };\n};\n\nexport default useTransactions;\n"]},"metadata":{},"sourceType":"module"}