{"ast":null,"code":"import _slicedToArray from\"/Users/maqiang/Desktop/INFO 6250/student--qma16443/project/Project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext}from'react';import{fetchLogin}from'../services/services';import messages from'../services/messages';import spinner from\"../services/spinner.svg\";import{GlobalContext}from'../context/GlobalState';var Login=function Login(_ref){var onLogIn=_ref.onLogIn;// This state is all local to the component\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),username=_useState2[0],setUsername=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoading=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];var performLogin=function performLogin(){if(!username){setError(messages.USERNAME_REQUIRED);return;}if(username==='dog'){setError(messages.BAD_USERNAME);return;}// set output for while we wait\nsetError('');setIsLoading(true);// start service call\nfetchLogin(username).then(function(userInfo){console.log(userInfo);onLogIn(userInfo.username);setIsLoading(false);// inform parent\n}).catch(function(err){setError(messages[err.code||'DEFAULT']);setIsLoading(false);});};return/*#__PURE__*/React.createElement(\"div\",{className:\"login\"},/*#__PURE__*/React.createElement(\"p\",{className:\"error\"},error),/*#__PURE__*/React.createElement(\"input\",{className:\"username\",onChange:function onChange(e){return setUsername(e.target.value);},placeholder:\"Enter your username\"}),isLoading?/*#__PURE__*/React.createElement(\"img\",{alt:\"spinner\",src:spinner}):/*#__PURE__*/React.createElement(\"button\",{className:\"loginbtn\",onClick:performLogin},\"Login\"));};export default Login;","map":{"version":3,"sources":["/Users/maqiang/Desktop/INFO 6250/student--qma16443/project/Project/src/components/Login.jsx"],"names":["React","useState","useContext","fetchLogin","messages","GlobalContext","Login","onLogIn","username","setUsername","isLoading","setIsLoading","error","setError","performLogin","USERNAME_REQUIRED","BAD_USERNAME","then","userInfo","console","log","catch","err","code","e","target","value","spinner"],"mappings":"yLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,KAA4C,OAA5C,CACA,OAASC,UAAT,KAA2B,sBAA3B,CACA,MAAOC,CAAAA,QAAP,KAAqB,sBAArB,C,6CAEA,OAASC,aAAT,KAA8B,wBAA9B,CAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAAe,IAAbC,CAAAA,OAAa,MAAbA,OAAa,CAE3B;AAF2B,cAGKN,QAAQ,CAAC,EAAD,CAHb,wCAGpBO,QAHoB,eAGVC,WAHU,8BAIOR,QAAQ,CAAC,KAAD,CAJf,yCAIpBS,SAJoB,eAITC,YAJS,8BAKDV,QAAQ,CAAC,EAAD,CALP,yCAKpBW,KALoB,eAKbC,QALa,eAO3B,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzB,GAAG,CAACN,QAAJ,CAAc,CACZK,QAAQ,CAACT,QAAQ,CAACW,iBAAV,CAAR,CACA,OACD,CACD,GAAGP,QAAQ,GAAG,KAAd,CAAoB,CAElBK,QAAQ,CAACT,QAAQ,CAACY,YAAV,CAAR,CACA,OACD,CACD;AACAH,QAAQ,CAAC,EAAD,CAAR,CACAF,YAAY,CAAC,IAAD,CAAZ,CACA;AACAR,UAAU,CAACK,QAAD,CAAV,CACCS,IADD,CACO,SAACC,QAAD,CAAc,CACnBC,OAAO,CAACC,GAAR,CAAYF,QAAZ,EACAX,OAAO,CAACW,QAAQ,CAACV,QAAV,CAAP,CACAG,YAAY,CAAC,KAAD,CAAZ,CAAqB;AACtB,CALD,EAMCU,KAND,CAMQ,SAACC,GAAD,CAAS,CACfT,QAAQ,CAACT,QAAQ,CAACkB,GAAG,CAACC,IAAJ,EAAY,SAAb,CAAT,CAAR,CACAZ,YAAY,CAAC,KAAD,CAAZ,CACD,CATD,EAUD,CAxBD,CA0BA,mBACE,2BAAK,SAAS,CAAC,OAAf,eACE,yBAAG,SAAS,CAAC,OAAb,EAAsBC,KAAtB,CADF,cAGE,6BAAO,SAAS,CAAC,UAAjB,CAA4B,QAAQ,CAAG,kBAACY,CAAD,QAAOf,CAAAA,WAAW,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB,EAAvC,CAA6E,WAAW,CAAC,qBAAzF,EAHF,CAIIhB,SAAS,cACP,2BAAK,GAAG,CAAC,SAAT,CAAmB,GAAG,CAAEiB,OAAxB,EADO,cAEP,8BAAQ,SAAS,CAAG,UAApB,CAA+B,OAAO,CAAGb,YAAzC,UANN,CADF,CAYD,CA7CD,CA+CA,cAAeR,CAAAA,KAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { fetchLogin } from '../services/services';\nimport messages from '../services/messages';\nimport spinner from '../services/spinner.svg';\nimport { GlobalContext } from '../context/GlobalState';\n\nconst Login = ({onLogIn}) => {\n\n  // This state is all local to the component\n  const [username, setUsername] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const performLogin = () => {\n    if(!username) {\n      setError(messages.USERNAME_REQUIRED);\n      return;\n    }\n    if(username==='dog'){\n      \n      setError(messages.BAD_USERNAME)\n      return;\n    }\n    // set output for while we wait\n    setError('');\n    setIsLoading(true);\n    // start service call\n    fetchLogin(username)\n    .then( (userInfo) => {\n      console.log(userInfo)\n      onLogIn(userInfo.username)\n      setIsLoading(false); // inform parent\n    })\n    .catch( (err) => {\n      setError(messages[err.code || 'DEFAULT']);\n      setIsLoading(false);\n    });\n  };\n\n  return (\n    <div className=\"login\">\n      <p className=\"error\">{error}</p>\n      \n      <input className=\"username\" onChange={ (e) => setUsername(e.target.value)  } placeholder=\"Enter your username\"/>\n      { isLoading ?\n          <img alt=\"spinner\" src={spinner}/> :\n          <button className = \"loginbtn\" onClick={ performLogin }>Login</button>\n      }\n    </div>\n  );\n\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}