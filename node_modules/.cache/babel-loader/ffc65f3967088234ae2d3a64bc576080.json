{"ast":null,"code":"const convertNetworkError = err => {\n  console.log(\"fail\");\n  return {\n    code: \"NETWORK-ERROR\",\n    err\n  };\n};\n\nconst convertServiceError = err => Promise.reject(err);\n\nexport const fetchLoginStatus = username => {\n  return fetch(\"/session\", {\n    method: \"GET\"\n  }).catch(convertNetworkError).then(response => {\n    if (!response.ok) {\n      return response.json().then(convertServiceError);\n    }\n\n    return response.json();\n  });\n};\nexport const fetchLogin = username => {\n  return fetch(\"/session\", {\n    method: \"POST\",\n    headers: new Headers({\n      \"content-type\": \"application/json\"\n    }),\n    body: JSON.stringify({\n      username\n    })\n  }).catch(convertNetworkError).then(response => {\n    if (!response.ok) {\n      return response.json().then(convertServiceError);\n    }\n\n    return response.json();\n  });\n};\nexport const fetchLogout = () => {\n  return fetch(\"/session\", {\n    method: \"DELETE\"\n  }).catch(convertNetworkError).then(response => {\n    return response.ok;\n  });\n};\nexport const fetchTransactionList = () => {\n  return fetch(\"/transactions\", {\n    method: \"GET\"\n  }).catch(convertNetworkError).then(response => {\n    if (!response.ok) {\n      // This service happens to give error messages as JSON\n      return response.json().then(convertServiceError);\n    }\n\n    return response.json();\n  });\n};\nexport const removeTransaction = id => {\n  return fetch(\"/transaction\", {\n    method: \"DELETE\",\n    headers: new Headers({\n      \"content-type\": \"application/json\"\n    }),\n    body: JSON.stringify({\n      id\n    })\n  }).catch(convertNetworkError).then(response => {\n    if (!response.ok) {\n      // This service happens to give error messages as JSON\n      return response.json().then(convertServiceError);\n    }\n\n    return response.json();\n  });\n};\nexport const clearTransactions = () => {\n  return fetch(\"/cleartransactions\").then(response => {\n    if (!response.ok) {\n      // This service happens to give error messages as JSON\n      return response.json().then(convertServiceError);\n    }\n\n    return response.json();\n  });\n};\nexport const addTransaction = transaction => {\n  return fetch(\"/transaction\", {\n    method: \"POST\",\n    headers: new Headers({\n      \"content-type\": \"application/json\"\n    }),\n    body: JSON.stringify({\n      transaction\n    })\n  }).catch(convertNetworkError).then(response => response.json());\n};","map":{"version":3,"sources":["/Users/maqiang/Desktop/INFO 6250/student--qma16443/project/Project/src/services/services.js"],"names":["convertNetworkError","err","console","log","code","convertServiceError","Promise","reject","fetchLoginStatus","username","fetch","method","catch","then","response","ok","json","fetchLogin","headers","Headers","body","JSON","stringify","fetchLogout","fetchTransactionList","removeTransaction","id","clearTransactions","addTransaction","transaction"],"mappings":"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","sourcesContent":["const convertNetworkError = err => {\n  console.log(\"fail\");\n  return {\n    code: \"NETWORK-ERROR\",\n    err\n  };\n};\n\nconst convertServiceError = err => Promise.reject(err);\nexport const fetchLoginStatus = username => {\n  return fetch(\"/session\", {\n    method: \"GET\"\n  })\n    .catch(convertNetworkError)\n    .then(response => {\n      if (!response.ok) {\n        return response.json().then(convertServiceError);\n      }\n      return response.json();\n    });\n};\n\nexport const fetchLogin = username => {\n  return fetch(\"/session\", {\n    method: \"POST\",\n    headers: new Headers({\n      \"content-type\": \"application/json\"\n    }),\n    body: JSON.stringify({ username })\n  })\n    .catch(convertNetworkError)\n    .then(response => {\n      if (!response.ok) {\n        return response.json().then(convertServiceError);\n      }\n      return response.json();\n    });\n};\n\nexport const fetchLogout = () => {\n  return fetch(\"/session\", {\n    method: \"DELETE\"\n  })\n    .catch(convertNetworkError)\n    .then(response => {\n      return response.ok;\n    });\n};\n\nexport const fetchTransactionList = () => {\n  return fetch(\"/transactions\", {\n    method: \"GET\"\n  })\n    .catch(convertNetworkError)\n    .then(response => {\n      if (!response.ok) {\n        // This service happens to give error messages as JSON\n        return response.json().then(convertServiceError);\n      }\n      return response.json();\n    });\n};\n\nexport const removeTransaction = id => {\n  return fetch(\"/transaction\", {\n    method: \"DELETE\",\n    headers: new Headers({\n      \"content-type\": \"application/json\"\n    }),\n    body: JSON.stringify({ id })\n  })\n    .catch(convertNetworkError)\n    .then(response => {\n      if (!response.ok) {\n        // This service happens to give error messages as JSON\n        return response.json().then(convertServiceError);\n      }\n      return response.json();\n    });\n};\n\nexport const clearTransactions = () => {\n  return fetch(\"/cleartransactions\").then(response => {\n    if (!response.ok) {\n      // This service happens to give error messages as JSON\n      return response.json().then(convertServiceError);\n    }\n    return response.json();\n  });\n};\n\nexport const addTransaction = transaction => {\n  return fetch(\"/transaction\", {\n    method: \"POST\",\n    headers: new Headers({\n      \"content-type\": \"application/json\"\n    }),\n    body: JSON.stringify({ transaction })\n  })\n    .catch(convertNetworkError)\n    .then(response => response.json());\n};\n"]},"metadata":{},"sourceType":"module"}