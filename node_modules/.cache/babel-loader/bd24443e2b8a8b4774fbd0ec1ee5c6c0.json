{"ast":null,"code":"import _slicedToArray from\"/Users/maqiang/Desktop/INFO 6250/student--qma16443/project/Project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext}from'react';import{GlobalContext}from'../context/GlobalState';import{addTransaction}from'../services/services';import{TextField,Grid,FormControl,InputLabel,Select,MenuItem}from'@material-ui/core';import{incomeCategories,expenseCategories}from'../constants/categories.js';import\"./style/style.css\";//This is the function to add transactions\nexport var AddTransaction=function AddTransaction(){//update all the states\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),category=_useState2[0],setCategory=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),amount=_useState4[0],setAmount=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),type=_useState6[0],setType=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),date=_useState8[0],setDate=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),text=_useState10[0],setText=_useState10[1];var _useContext=useContext(GlobalContext),updateTransactions=_useContext.updateTransactions;var onSubmit=function onSubmit(e){e.preventDefault();var newTransaction={category:category,amount:+amount,type:type,date:date,text:text};addTransaction(newTransaction).then(function(result){console.log(result);updateTransactions(result);setCategory(\"\");setAmount(0);setDate();setType('');setText('');}).catch(function(err){console.log(err);});;};var selectedCategories=type==='Income'?incomeCategories:expenseCategories;return/*#__PURE__*/React.createElement(\"div\",{className:\"newTransaction\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Add new transaction\"),/*#__PURE__*/React.createElement(Grid,{container:true,spacing:3},/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(FormControl,{fullWidth:true},/*#__PURE__*/React.createElement(InputLabel,null,\"Income/Expense\"),/*#__PURE__*/React.createElement(Select,{value:type,onChange:function onChange(e){return setType(e.target.value);}},/*#__PURE__*/React.createElement(MenuItem,{value:\"Income\"},\"Income\"),/*#__PURE__*/React.createElement(MenuItem,{value:\"Expense\"},\"Expense\")))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(FormControl,{fullWidth:true},/*#__PURE__*/React.createElement(InputLabel,null,\"Category\"),/*#__PURE__*/React.createElement(Select,{value:category,onChange:function onChange(e){return setCategory(e.target.value);}},selectedCategories.map(function(c){return/*#__PURE__*/React.createElement(MenuItem,{key:c.type,value:c.type},c.type);})))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(TextField,{fullWidth:true,label:\"Amount(>0)\",inputProps:{min:0},type:\"number\",value:amount,onChange:function onChange(e){return setAmount(e.target.value);}})),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(TextField,{fullWidth:true,label:\"Date\",type:\"date\",value:date,onChange:function onChange(e){return setDate(e.target.value);}})),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(TextField,{type:\"text\",label:\"Remark\",value:text,onChange:function onChange(e){return setText(e.target.value);}})),/*#__PURE__*/React.createElement(\"button\",{className:\"btn\",onClick:onSubmit},\"Add transaction\")));};","map":{"version":3,"sources":["/Users/maqiang/Desktop/INFO 6250/student--qma16443/project/Project/src/components/AddTransaction.jsx"],"names":["React","useState","useContext","GlobalContext","addTransaction","TextField","Grid","FormControl","InputLabel","Select","MenuItem","incomeCategories","expenseCategories","AddTransaction","category","setCategory","amount","setAmount","type","setType","date","setDate","text","setText","updateTransactions","onSubmit","e","preventDefault","newTransaction","then","result","console","log","catch","err","selectedCategories","target","value","map","c","min"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from 'react'\nimport { GlobalContext } from '../context/GlobalState';\nimport { addTransaction } from '../services/services';\nimport { TextField, Grid, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport { incomeCategories, expenseCategories } from '../constants/categories.js';\nimport \"./style/style.css\";\n\n//This is the function to add transactions\nexport const AddTransaction = () => {\n  //update all the states\n  const [category,setCategory]=useState('');\n  const [amount, setAmount] = useState(0);\n  const [type,setType] = useState('');\n  const [date,setDate] = useState();\n  const [text, setText] = useState('');\n\n  const { updateTransactions } = useContext(GlobalContext);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const newTransaction = {\n      category:category,\n      amount:+amount,\n      type:type,\n      date:date,\n      text:text\n    }\n    addTransaction(newTransaction)\n    .then((result) => {\n      console.log(result)\n      updateTransactions(result)  \n      setCategory(\"\");\n      setAmount(0);\n      setDate();\n      setType('');\n      setText('');\n    }).catch((err) => {\n      console.log(err)     \n    });\n    ;\n  }\n\n  const selectedCategories = type === 'Income' ? incomeCategories : expenseCategories;\n  return (\n    <div className=\"newTransaction\">\n      <h3>Add new transaction</h3>\n      <Grid  container spacing={3}>\n        <Grid item xs={12}>\n        <FormControl fullWidth>\n        <InputLabel>Income/Expense</InputLabel>\n        <Select value={type} onChange={(e) => setType(e.target.value)}>\n            <MenuItem value=\"Income\">Income</MenuItem>\n            <MenuItem value=\"Expense\">Expense</MenuItem>\n        </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={12}>\n        <FormControl fullWidth>\n          <InputLabel>Category</InputLabel>\n          <Select value={category} onChange={(e) => setCategory(e.target.value)}>\n            {selectedCategories.map((c) => <MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)}\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={12}>\n          <TextField fullWidth label=\"Amount(>0)\" inputProps={{ min: 0 }} type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)}  />\n     </Grid>\n     <Grid item xs={12}>\n        <TextField fullWidth label=\"Date\" type=\"date\" value={date} onChange={(e) => setDate(e.target.value )} />\n      </Grid>\n\n      <Grid item xs={12}>\n          <TextField  type='text'label=\"Remark\" value={text} onChange={(e) => setText(e.target.value)} />\n     </Grid>\n        <button className=\"btn\"  onClick={onSubmit} >Add transaction</button>\n    </Grid>\n  \n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}